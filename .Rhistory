sum.occ [c(1:8), 1] <- "Base Case"
sum.occ [c(9:15), 1] <- "Indigenous Alternative Flow"
sum.occ [c(1:15), 2] <- c(2020, #2030,
2040, 2050, 2060, 2070, 2080, 2090, 2020,
2020, #2030,
2040, 2050, 2060, 2070, 2080, 2090)
sum.occ [1,3] <- sum (hex.grid$perc_occ_2022_bc)
#sum.occ [2,3] <- sum (hex.grid$perc_occ_2030_bc)
sum.occ [2,3] <- sum (hex.grid$perc_occ_2040_bc)
sum.occ [3,3] <- sum (hex.grid$perc_occ_2050_bc)
sum.occ [4,3] <- sum (hex.grid$perc_occ_2060_bc)
sum.occ [5,3] <- sum (hex.grid$perc_occ_2070_bc)
sum.occ [6,3] <- sum (hex.grid$perc_occ_2080_bc)
sum.occ [7,3] <- sum (hex.grid$perc_occ_2090_bc)
sum.occ [8,3] <- sum (hex.grid$perc_occ_2022_iaf)
#sum.occ [10,3] <- sum (hex.grid$perc_occ_2030_iaf)
sum.occ [9,3] <-sum (hex.grid$perc_occ_2022_bc)
sum.occ [10,3] <- sum (hex.grid$perc_occ_2040_iaf)
sum.occ [11,3] <- sum (hex.grid$perc_occ_2050_iaf)
sum.occ [12,3] <- sum (hex.grid$perc_occ_2060_iaf)
sum.occ [13,3] <- sum (hex.grid$perc_occ_2070_iaf)
sum.occ [14,3] <- sum (hex.grid$perc_occ_2080_iaf)
sum.occ [15,3] <- sum (hex.grid$perc_occ_2090_iaf)
ggplot (data = hex.grid) +
geom_sf (aes (fill = perc_occ_2022_bc)) + # cutblock2022_ha, wetland_ha
geom_sf (data = tsa_bound, fill = NA, linetype = "longdash", size = 1.1, colour = "green") +
xlab("Longitude") + ylab("Latitude") +
ggtitle ("Current Fisher Equivalent Territory Occupancy 2020") +
scale_fill_viridis (option = "magma", breaks = c (0, 0.2, 0.4, 0.6, 0.8, 1),
direction = -1) +
guides (fill = guide_legend (title = "Probability of Occupancy")) +
annotation_scale(location = "bl", width_hint = 0.5,
pad_y = unit(0.03, "in")) +
annotation_north_arrow(location = "bl", which_north = "true",
pad_x = unit (0, "in"), pad_y = unit (0.1, "in"),
style = north_arrow_fancy_orienteering) +
labs (caption = "Mackenzie TSA boundary indicated by green dashed line.") +
theme (axis.text.x = element_text (angle = 30, hjust = 1))
knitr::opts_chunk$set(echo = TRUE)
library (sf)
library (here)
library (raster)
library (fasterize)
library (ggplot2)
library (viridis)
library (ggspatial)
library (dplyr)
fisher.rge <- st_make_valid (sf::st_read("D:/tsr/mackenzie/data/fisher_density_2004.shp", quiet = T))
fisher.rge <- fisher.rge [fisher.rge$fisher_cap %in% c('very high', 'high', 'med', 'low'),]
fisher.rge <- st_make_valid (sf::st_read("D:/tsr/mackenzie/data/fisher_density_2004.shp", quiet = T))
fisher.rge <- fisher.rge [fisher.rge$fisher_cap %in% c('very high', 'high', 'med', 'low'),]
uniquie (fisher.rge$fisher_cap)
unique (fisher.rge$fisher_cap)
hex.grid <- st_as_sf (st_make_grid (fisher.rge, cellsize = 5886, square = FALSE)) #5886 = 30 km2 territory
plot (hex.grid)
fisher.rge <- st_make_valid (sf::st_read("D:/tsr/mackenzie/data/fisher_mac.shp", quiet = T))
fisher.rge <- fisher.rge [fisher.rge$fisher_cap %in% c('very high', 'high', 'med', 'low'),]
hex.grid <- st_as_sf (st_make_grid (fisher.rge, cellsize = 5886, square = FALSE)) #5886 = 30 km2 territory
hex.grid$fid <- 1:nrow (hex.grid)
plot (hex.grid)
fisher.rge <- fisher.rge [fisher.rge$fisher_cap %in% c('very high', 'high', 'med', 'low'),]
hex.grid <- st_as_sf (st_make_grid (fisher.rge, cellsize = 5886, square = FALSE)) #5886 = 30 km2 territory
hex.grid$fid <- 1:nrow (hex.grid)
plot (hex.grid)
knitr::opts_chunk$set(echo = TRUE)
library (sf)
library (here)
library (raster)
library (fasterize)
library (ggplot2)
library (viridis)
library (ggspatial)
library (dplyr)
# current habitat data
tsa_bound <- st_make_valid (sf::st_read("D:/tsr/mackenzie/data/mackenzie_2022.gdb", layer = "tsa_bounds", quiet = T))
cutblocks <- st_make_valid (sf::st_read("D:/tsr/mackenzie/data/mackenzie_2022.gdb", layer = "cutblocks", quiet = T))
vri <- st_make_valid (sf::st_read(here ("D:/tsr/mackenzie/data/mackenzie_2022.gdb"), layer = "vri", quiet = T))
vri <- vri [, c ('FEATURE_ID', 'BEC_ZONE_CODE', 'BEC_SUBZONE', 'BEC_VARIANT', 'BEC_PHASE',
'BCLCS_LEVEL_1', 'BCLCS_LEVEL_2', 'BCLCS_LEVEL_3', 'BCLCS_LEVEL_5',
'LINE_7B_DISTURBANCE_HISTORY', 'CROWN_CLOSURE', 'BASAL_AREA')]
vri <- st_cast (vri, to = "MULTIPOLYGON")
fisher.rge <- st_make_valid (sf::st_read("D:/tsr/mackenzie/data/fisher_mac.shp", quiet = T))
fisher.rge <- fisher.rge [fisher.rge$fisher_cap %in% c('very high', 'high', 'med', 'low'),]
# STSM projections
## future logged areas
### base case
ras.cut.sim <- raster ("D:/tsr/mackenzie/data/base_case/Logged_1_7.tif")
ras.cut.sim <- ras.cut.sim - 329 # changes value to decade of logging
ras.cut.sim <- raster::reclassify (ras.cut.sim, c (-Inf,0,0))
## IAF
ras.cut.sim.iaf <- raster ("D:/tsr/mackenzie/data/IAF/Logged_1_7.tif")
ras.cut.sim.iaf <- ras.cut.sim.iaf - 329 # changes value to decade of logging
ras.cut.sim.iaf <- raster::reclassify (ras.cut.sim.iaf, c (-Inf,0,0))
# bec <- vri %>% # Select BEC Zones where fisher occur
#         dplyr::filter (BEC_ZONE_CODE == 'SBS' & BEC_SUBZONE == 'wk' |
#                        BEC_ZONE_CODE == 'SBS' & BEC_SUBZONE == 'mk' |
#                        BEC_ZONE_CODE == 'SBS' & BEC_SUBZONE == 'mm' |
#                        BEC_ZONE_CODE == 'SBS' & BEC_SUBZONE == 'mw' |
#                        BEC_ZONE_CODE == 'SBS' & BEC_SUBZONE == 'dw' |
#                        BEC_ZONE_CODE == 'SBS' & BEC_SUBZONE == 'dh' |
#                        BEC_ZONE_CODE == 'SBS' & BEC_SUBZONE == 'dk' |
#
#                        BEC_ZONE_CODE == 'SBPS' & BEC_SUBZONE == 'xc' |
#                        BEC_ZONE_CODE == 'SBPS' & BEC_SUBZONE == 'mc' |
#                        BEC_ZONE_CODE == 'SBPS' & BEC_SUBZONE == 'dc' |
#                        BEC_ZONE_CODE == 'SBPS' & BEC_SUBZONE == 'mk' |
#
#                        BEC_ZONE_CODE == 'IDF' & BEC_SUBZONE == 'dk' |
#                        BEC_ZONE_CODE == 'IDF' & BEC_SUBZONE == 'dc' |
#                        BEC_ZONE_CODE == 'IDF' & BEC_SUBZONE == 'mw' |
#                        BEC_ZONE_CODE == 'IDF' & BEC_SUBZONE == 'dw' |
#                        BEC_ZONE_CODE == 'IDF' & BEC_SUBZONE == 'ww' |
#
#                        BEC_ZONE_CODE == 'MS' & BEC_SUBZONE == 'xc' |
#                        BEC_ZONE_CODE == 'MS' & BEC_SUBZONE == 'xk' |
#                        BEC_ZONE_CODE == 'MS' & BEC_SUBZONE == 'dv' |
#                        BEC_ZONE_CODE == 'MS' & BEC_SUBZONE == 'dm' |
#                        BEC_ZONE_CODE == 'MS' & BEC_SUBZONE == 'dk' |
#                        BEC_ZONE_CODE == 'MS' & BEC_SUBZONE == 'dc')
hex.grid <- st_as_sf (st_make_grid (fisher.rge, cellsize = 5886, square = FALSE)) #5886 = 30 km2 territory
hex.grid$fid <- 1:nrow (hex.grid)
wetlands <- vri %>%
filter (BCLCS_LEVEL_1 == "N" |
BCLCS_LEVEL_2 == "N" & LINE_7B_DISTURBANCE_HISTORY == '' &
CROWN_CLOSURE < 6 & BASAL_AREA < 5 |
BCLCS_LEVEL_2 == "N" & LINE_7B_DISTURBANCE_HISTORY == '' &
CROWN_CLOSURE == '' & BASAL_AREA < 5 |
BCLCS_LEVEL_2 == "N" & LINE_7B_DISTURBANCE_HISTORY == '' &
CROWN_CLOSURE < 6 & BASAL_AREA == '' |
BCLCS_LEVEL_2 == "N" & LINE_7B_DISTURBANCE_HISTORY == '' &
CROWN_CLOSURE == '' & BASAL_AREA == '' |
BCLCS_LEVEL_3 == "W"  & BCLCS_LEVEL_5 == "SP" |
BCLCS_LEVEL_3 == "W"  & BCLCS_LEVEL_5 == "OP") # open areas as defined by Rich Weir
wetlands$wetland <- 1
wetlands <- sf::st_drop_geometry (wetlands [, c ('FEATURE_ID', 'wetland')])
vri <- full_join (vri, wetlands, by = "FEATURE_ID")
vri$wetland [is.na (vri$wetland [])] <- 0 # make NA's = 0
#vri <- st_cast (vri, to = "MULTIPOLYGON")
wetland.ras <- fasterize::fasterize (vri, ras.cut.sim, field = "wetland")
hex.grid$wetland_ha <- exactextractr::exact_extract (wetland.ras, hex.grid, c('sum'), progress = FALSE)
cutblocks.open <- cutblocks %>%
filter (HARVEST_YEAR > 2009)
cutblocks.open$cutblock_current <- 1
cutblocks.open <- st_cast (cutblocks.open, to = "MULTIPOLYGON")
cutblocks.open.ras <- fasterize::fasterize (cutblocks.open, ras.cut.sim, field = "cutblock_current")
hex.grid$cutblock2022_ha <- exactextractr::exact_extract (cutblocks.open.ras, hex.grid, c('sum'), progress = FALSE)
## 2030
cutblocks.open <- cutblocks %>%
filter (HARVEST_YEAR > 2017)
cutblocks.open$cutblock_2030 <- 1
cutblocks.open <- st_cast (cutblocks.open, to = "MULTIPOLYGON")
cutblocks.open.2030.ras <- fasterize::fasterize (cutblocks.open, ras.cut.sim, field = "cutblock_2030")
ras.cut.new.2030.bc <- raster::reclassify (ras.cut.sim, # cutblocks cut 2020 to 2030
c (0,11,1, 11,Inf,0))
cutblocks.open.2030.ras.bc <- ras.cut.new.2030.bc + cutblocks.open.2030.ras
cutblocks.open.2030.ras.bc [cutblocks.open.2030.ras.bc > 1] <- 1
hex.grid$cutblock2030_bc_ha <- exactextractr::exact_extract (cutblocks.open.2030.ras.bc, hex.grid, c('sum'), progress = FALSE)
## 2040
ras.cut.new.2040 <- raster::reclassify (ras.cut.sim,
c (0,11,0, 12,21,1, 21,Inf,0))
hex.grid$cutblock2040_bc_ha <- (exactextractr::exact_extract (ras.cut.new.2040, hex.grid, c('sum'), progress = FALSE) + (hex.grid$cutblock2030_bc_ha * 0.2)) # take 20% of the blocks form the previous decade to make it 12 years
## 2050
ras.cut.new.2050 <- raster::reclassify (ras.cut.sim,
c (0,21,0, 22,31,1, 31,Inf,0))
hex.grid$cutblock2050_bc_ha <- (exactextractr::exact_extract (ras.cut.new.2050, hex.grid, c('sum'), progress = FALSE) + (exactextractr::exact_extract (ras.cut.new.2040, hex.grid, c('sum'), progress = FALSE) * 0.2)) # take 20% of the blocks form the previous decade to make it 12 years
## 2060
ras.cut.new.2060 <- raster::reclassify (ras.cut.sim,
c (0,31,0, 32,41,1, 31,Inf,0))
hex.grid$cutblock2060_bc_ha <- (exactextractr::exact_extract (ras.cut.new.2060, hex.grid, c('sum'), progress = FALSE) + (exactextractr::exact_extract (ras.cut.new.2050, hex.grid, c('sum'), progress = FALSE) * 0.2)) # take 20% of the blocks form the previous decade to make it 12 years
## 2070
ras.cut.new.2070 <- raster::reclassify (ras.cut.sim,
c (0,41,0, 42,51,1, 51,Inf,0))
hex.grid$cutblock2070_bc_ha <- (exactextractr::exact_extract (ras.cut.new.2070, hex.grid, c('sum'), progress = FALSE) + (exactextractr::exact_extract (ras.cut.new.2060, hex.grid, c('sum'), progress = FALSE) * 0.2)) # take 20% of the blocks form the previous decade to make it 12 years
## 2080
ras.cut.new.2080 <- raster::reclassify (ras.cut.sim,
c (0,51,0, 52,61,1, 61,Inf,0))
hex.grid$cutblock2080_bc_ha <- (exactextractr::exact_extract (ras.cut.new.2080, hex.grid, c('sum'), progress = FALSE) + (exactextractr::exact_extract (ras.cut.new.2070, hex.grid, c('sum'), progress = FALSE) * 0.2)) # take 20% of the blocks form the previous decade to make it 12 years
## 2090
ras.cut.new.2090 <- raster::reclassify (ras.cut.sim,
c (0,61,0, 62,71,1, 71,Inf,0))
hex.grid$cutblock2090_bc_ha <- (exactextractr::exact_extract (ras.cut.new.2090, hex.grid, c('sum'), progress = FALSE) + (exactextractr::exact_extract (ras.cut.new.2080, hex.grid, c('sum'), progress = FALSE) * 0.2)) # take 20% of the blocks form the previous decade to make it 12 years
## 2030
cutblocks.open <- cutblocks %>%
filter (HARVEST_YEAR > 2017)
cutblocks.open$cutblock_2030 <- 1
cutblocks.open <- st_cast (cutblocks.open, to = "MULTIPOLYGON")
cutblocks.open.2030.ras <- fasterize::fasterize (cutblocks.open, ras.cut.sim, field = "cutblock_2030")
ras.cut.new.2030.iaf <- raster::reclassify (ras.cut.sim.iaf, # cutblocks cut 2020 to 2030
c (0,11,1, 11,Inf,0))
cutblocks.open.2030.ras.iaf <- ras.cut.new.2030.iaf + cutblocks.open.2030.ras
cutblocks.open.2030.ras.iaf [cutblocks.open.2030.ras.iaf > 1] <- 1
hex.grid$cutblock2030_iaf_ha <- exactextractr::exact_extract (cutblocks.open.2030.ras.iaf, hex.grid, c('sum'), progress = FALSE)
## 2040
ras.cut.new.2040.iaf <- raster::reclassify (ras.cut.sim.iaf,
c (0,11,0, 12,21,1, 21,Inf,0))
hex.grid$cutblock2040_iaf_ha <- (exactextractr::exact_extract (ras.cut.new.2040.iaf, hex.grid, c('sum'), progress = FALSE) + (hex.grid$cutblock2030_iaf_ha * 0.2)) # take 20% of the blocks form the previous decade to make it 12 years
## 2050
ras.cut.new.2050.iaf <- raster::reclassify (ras.cut.sim.iaf,
c (0,21,0, 22,31,1, 31,Inf,0))
hex.grid$cutblock2050_iaf_ha <- (exactextractr::exact_extract (ras.cut.new.2050.iaf, hex.grid, c('sum'), progress = FALSE) + (exactextractr::exact_extract (ras.cut.new.2040.iaf, hex.grid, c('sum'), progress = FALSE) * 0.2)) # take 20% of the blocks form the previous decade to make it 12 years
## 2060
ras.cut.new.2060.iaf <- raster::reclassify (ras.cut.sim.iaf,
c (0,31,0, 32,41,1, 31,Inf,0))
hex.grid$cutblock2060_iaf_ha <- (exactextractr::exact_extract (ras.cut.new.2060.iaf, hex.grid, c('sum'), progress = FALSE) + (exactextractr::exact_extract (ras.cut.new.2050.iaf, hex.grid, c('sum'), progress = FALSE) * 0.2)) # take 20% of the blocks form the previous decade to make it 12 years
## 2070
ras.cut.new.2070.iaf <- raster::reclassify (ras.cut.sim.iaf,
c (0,41,0, 42,51,1, 51,Inf,0))
hex.grid$cutblock2070_iaf_ha <- (exactextractr::exact_extract (ras.cut.new.2070.iaf, hex.grid, c('sum'), progress = FALSE) + (exactextractr::exact_extract (ras.cut.new.2060.iaf, hex.grid, c('sum'), progress = FALSE) * 0.2)) # take 20% of the blocks form the previous decade to make it 12 years
## 2080
ras.cut.new.2080.iaf <- raster::reclassify (ras.cut.sim.iaf,
c (0,51,0, 52,61,1, 61,Inf,0))
hex.grid$cutblock2080_iaf_ha <- (exactextractr::exact_extract (ras.cut.new.2080.iaf, hex.grid, c('sum'), progress = FALSE) + (exactextractr::exact_extract (ras.cut.new.2070.iaf, hex.grid, c('sum'), progress = FALSE) * 0.2)) # take 20% of the blocks form the previous decade to make it 12 years
## 2090
ras.cut.new.2090 <- raster::reclassify (ras.cut.sim.iaf,
c (0,61,0, 62,71,1, 71,Inf,0))
hex.grid$cutblock2090_iaf_ha <- (exactextractr::exact_extract (ras.cut.new.2090, hex.grid, c('sum'), progress = FALSE) + (exactextractr::exact_extract (ras.cut.new.2080, hex.grid, c('sum'), progress = FALSE) * 0.2)) # take 20% of the blocks form the previous decade to make it 12 years
# calculate area of polys
hex.grid$hex_area_ha <- units::drop_units (st_area (hex.grid) * 0.0001)
# base case
hex.grid$openness2022 <- hex.grid$cutblock2022_ha + hex.grid$wetland_ha
hex.grid$perc_open_2022_bc <- (hex.grid$openness2022 / hex.grid$hex_area_ha) * 100
hex.grid$perc_open_2030_bc <- ((hex.grid$cutblock2030_bc_ha + hex.grid$wetland_ha) / hex.grid$hex_area_ha) * 100
hex.grid$perc_open_2040_bc <- ((hex.grid$cutblock2040_bc_ha + hex.grid$wetland_ha) / hex.grid$hex_area_ha) * 100
hex.grid$perc_open_2050_bc <- ((hex.grid$cutblock2050_bc_ha + hex.grid$wetland_ha) / hex.grid$hex_area_ha) * 100
hex.grid$perc_open_2060_bc <- ((hex.grid$cutblock2060_bc_ha + hex.grid$wetland_ha) / hex.grid$hex_area_ha) * 100
hex.grid$perc_open_2070_bc <- ((hex.grid$cutblock2070_bc_ha + hex.grid$wetland_ha) / hex.grid$hex_area_ha) * 100
hex.grid$perc_open_2080_bc <- ((hex.grid$cutblock2080_bc_ha + hex.grid$wetland_ha) / hex.grid$hex_area_ha) * 100
hex.grid$perc_open_2090_bc <- ((hex.grid$cutblock2090_bc_ha + hex.grid$wetland_ha) / hex.grid$hex_area_ha) * 100
hex.grid$perc_occ_2022_bc <- exp (-0.219 * hex.grid$perc_open_2022_bc) / (1 + exp (-0.219 * hex.grid$perc_open_2022_bc)) / 0.5
hex.grid$perc_occ_2030_bc <- exp (-0.219 * hex.grid$perc_open_2030_bc) / (1 + exp (-0.219 * hex.grid$perc_open_2030_bc)) / 0.5
hex.grid$perc_occ_2040_bc <- exp (-0.219 * hex.grid$perc_open_2040_bc) / (1 + exp (-0.219 * hex.grid$perc_open_2040_bc)) / 0.5
hex.grid$perc_occ_2050_bc <- exp (-0.219 * hex.grid$perc_open_2050_bc) / (1 + exp (-0.219 * hex.grid$perc_open_2050_bc)) / 0.5
hex.grid$perc_occ_2060_bc <- exp (-0.219 * hex.grid$perc_open_2060_bc) / (1 + exp (-0.219 * hex.grid$perc_open_2060_bc)) / 0.5
hex.grid$perc_occ_2070_bc <- exp (-0.219 * hex.grid$perc_open_2070_bc) / (1 + exp (-0.219 * hex.grid$perc_open_2070_bc)) / 0.5
hex.grid$perc_occ_2080_bc <- exp (-0.219 * hex.grid$perc_open_2080_bc) / (1 + exp (-0.219 * hex.grid$perc_open_2080_bc)) / 0.5
hex.grid$perc_occ_2090_bc <- exp (-0.219 * hex.grid$perc_open_2090_bc) / (1 + exp (-0.219 * hex.grid$perc_open_2090_bc)) / 0.5
# IAF
hex.grid$openness2022 <- hex.grid$cutblock2022_ha + hex.grid$wetland_ha
hex.grid$perc_open_2022_iaf <- (hex.grid$openness2022 / hex.grid$hex_area_ha) * 100
hex.grid$perc_open_2030_iaf <- ((hex.grid$cutblock2030_iaf_ha + hex.grid$wetland_ha) / hex.grid$hex_area_ha) * 100
hex.grid$perc_open_2040_iaf <- ((hex.grid$cutblock2040_iaf_ha + hex.grid$wetland_ha) / hex.grid$hex_area_ha) * 100
hex.grid$perc_open_2050_iaf <- ((hex.grid$cutblock2050_iaf_ha + hex.grid$wetland_ha) / hex.grid$hex_area_ha) * 100
hex.grid$perc_open_2060_iaf <- ((hex.grid$cutblock2060_iaf_ha + hex.grid$wetland_ha) / hex.grid$hex_area_ha) * 100
hex.grid$perc_open_2070_iaf <- ((hex.grid$cutblock2070_iaf_ha + hex.grid$wetland_ha) / hex.grid$hex_area_ha) * 100
hex.grid$perc_open_2080_iaf <- ((hex.grid$cutblock2080_iaf_ha + hex.grid$wetland_ha) / hex.grid$hex_area_ha) * 100
hex.grid$perc_open_2090_iaf <- ((hex.grid$cutblock2090_iaf_ha + hex.grid$wetland_ha) / hex.grid$hex_area_ha) * 100
hex.grid$perc_occ_2022_iaf <- exp (-0.219 * hex.grid$perc_open_2022_iaf) / (1 + exp (-0.219 * hex.grid$perc_open_2022_iaf)) / 0.5
hex.grid$perc_occ_2030_iaf <- exp (-0.219 * hex.grid$perc_open_2030_iaf) / (1 + exp (-0.219 * hex.grid$perc_open_2030_iaf)) / 0.5
hex.grid$perc_occ_2040_iaf <- exp (-0.219 * hex.grid$perc_open_2040_iaf) / (1 + exp (-0.219 * hex.grid$perc_open_2040_iaf)) / 0.5
hex.grid$perc_occ_2050_iaf <- exp (-0.219 * hex.grid$perc_open_2050_iaf) / (1 + exp (-0.219 * hex.grid$perc_open_2050_iaf)) / 0.5
hex.grid$perc_occ_2060_iaf <- exp (-0.219 * hex.grid$perc_open_2060_iaf) / (1 + exp (-0.219 * hex.grid$perc_open_2060_iaf)) / 0.5
hex.grid$perc_occ_2070_iaf <- exp (-0.219 * hex.grid$perc_open_2070_iaf) / (1 + exp (-0.219 * hex.grid$perc_open_2070_iaf)) / 0.5
hex.grid$perc_occ_2080_iaf <- exp (-0.219 * hex.grid$perc_open_2080_iaf) / (1 + exp (-0.219 * hex.grid$perc_open_2080_iaf)) / 0.5
hex.grid$perc_occ_2090_iaf <- exp (-0.219 * hex.grid$perc_open_2090_iaf) / (1 + exp (-0.219 * hex.grid$perc_open_2090_iaf)) / 0.5
#base case
sum.occ <- data.frame (matrix (ncol = 3, nrow = 0))
colnames (sum.occ) <- c('Scenario', 'Year', 'Total_Occupied')
sum.occ [c(1:8), 1] <- "Base Case"
sum.occ [c(9:15), 1] <- "Indigenous Alternative Flow"
sum.occ [c(1:15), 2] <- c(2020, #2030,
2040, 2050, 2060, 2070, 2080, 2090, 2020,
2020, #2030,
2040, 2050, 2060, 2070, 2080, 2090)
sum.occ [1,3] <- sum (hex.grid$perc_occ_2022_bc)
#sum.occ [2,3] <- sum (hex.grid$perc_occ_2030_bc)
sum.occ [2,3] <- sum (hex.grid$perc_occ_2040_bc)
sum.occ [3,3] <- sum (hex.grid$perc_occ_2050_bc)
sum.occ [4,3] <- sum (hex.grid$perc_occ_2060_bc)
sum.occ [5,3] <- sum (hex.grid$perc_occ_2070_bc)
sum.occ [6,3] <- sum (hex.grid$perc_occ_2080_bc)
sum.occ [7,3] <- sum (hex.grid$perc_occ_2090_bc)
sum.occ [8,3] <- sum (hex.grid$perc_occ_2022_iaf)
#sum.occ [10,3] <- sum (hex.grid$perc_occ_2030_iaf)
sum.occ [9,3] <-sum (hex.grid$perc_occ_2022_bc)
sum.occ [10,3] <- sum (hex.grid$perc_occ_2040_iaf)
sum.occ [11,3] <- sum (hex.grid$perc_occ_2050_iaf)
sum.occ [12,3] <- sum (hex.grid$perc_occ_2060_iaf)
sum.occ [13,3] <- sum (hex.grid$perc_occ_2070_iaf)
sum.occ [14,3] <- sum (hex.grid$perc_occ_2080_iaf)
sum.occ [15,3] <- sum (hex.grid$perc_occ_2090_iaf)
ggplot (data = hex.grid) +
geom_sf (aes (fill = perc_occ_2022_bc)) + # cutblock2022_ha, wetland_ha
geom_sf (data = tsa_bound, fill = NA, linetype = "longdash", size = 1.1, colour = "green") +
xlab("Longitude") + ylab("Latitude") +
ggtitle ("Current Fisher Equivalent Territory Occupancy 2020") +
scale_fill_viridis (option = "magma", breaks = c (0, 0.2, 0.4, 0.6, 0.8, 1),
direction = -1) +
guides (fill = guide_legend (title = "Probability of Occupancy")) +
annotation_scale(location = "bl", width_hint = 0.5,
pad_y = unit(0.03, "in")) +
annotation_north_arrow(location = "bl", which_north = "true",
pad_x = unit (0, "in"), pad_y = unit (0.1, "in"),
style = north_arrow_fancy_orienteering) +
labs (caption = "Mackenzie TSA boundary indicated by green dashed line.") +
theme (axis.text.x = element_text (angle = 30, hjust = 1))
ggplot (data = sum.occ,
aes (x = Year, y = Total_Occupied, col = Scenario)) +
geom_line (aes (linetype = Scenario), size = 1) +
xlab ("Year") + ylab ("Total Probability of Occupancy of all FETAs") +
scale_x_continuous (limits = c (2020, 2090), breaks = seq (2020, 2090, by = 10)) +
scale_y_continuous (limits = c (300, 500), breaks = seq (300, 500, by = 20)) +
#ggtitle ("Base Case Central Group Caribou Critical Habitat Simulated Disturbance") +
theme (axis.text = element_text (size = 10),
axis.title = element_text (size = 12),
axis.line.x = element_line (size = 1),
axis.line.y = element_line (size = 1),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
legend.position = "bottom",
legend.key = element_rect (fill = NA))
ggplot (data = sum.occ,
aes (x = Year, y = Total_Occupied, col = Scenario)) +
geom_line (aes (linetype = Scenario), size = 1) +
xlab ("Year") + ylab ("Total Probability of Occupancy of all FETAs")
ggplot (data = sum.occ,
aes (x = Year, y = Total_Occupied, col = Scenario)) +
geom_line (aes (linetype = Scenario), size = 1) +
xlab ("Year") + ylab ("Total Probability of Occupancy of all FETAs") +
scale_x_continuous (limits = c (2020, 2090), breaks = seq (2020, 2090, by = 10)) +
scale_y_continuous (limits = c (750, 850), breaks = seq (750, 850, by = 10)) +
#ggtitle ("Base Case Central Group Caribou Critical Habitat Simulated Disturbance") +
theme (axis.text = element_text (size = 10),
axis.title = element_text (size = 12),
axis.line.x = element_line (size = 1),
axis.line.y = element_line (size = 1),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
legend.position = "bottom",
legend.key = element_rect (fill = NA))
ggplot (data = hex.grid) +
geom_sf (aes (fill = perc_occ_2040_bc)) +
geom_sf (data = tsa_bound, fill = NA, linetype = "longdash", size = 1.1, colour = "green") +
xlab("Longitude") + ylab("Latitude") +
ggtitle ("Base Case Fisher Equivalent Territory Occupancy 2040") +
scale_fill_viridis (option = "magma", breaks = c (0, 0.2, 0.4, 0.6, 0.8, 1),
direction = -1) +
guides (fill = guide_legend (title = "Probability of Occupancy")) +
annotation_scale(location = "bl", width_hint = 0.5,
pad_y = unit(0.03, "in")) +
annotation_north_arrow(location = "bl", which_north = "true",
pad_x = unit(0, "in"), pad_y = unit(0.1, "in"),
style = north_arrow_fancy_orienteering) +
labs (caption = "Mackenzie TSA boundary indicated by green dashed line.") +
theme (axis.text.x = element_text (angle = 30, hjust = 1))
ggplot (data = hex.grid) +
geom_sf (aes (fill = perc_occ_2060_bc)) +
geom_sf (data = tsa_bound, fill = NA, linetype = "longdash", size = 1.1, colour = "green") +
xlab("Longitude") + ylab("Latitude") +
ggtitle ("Base Case Fisher Equivalent Territory Occupancy 2060") +
scale_fill_viridis (option = "magma", breaks = c (0, 0.2, 0.4, 0.6, 0.8, 1),
direction = -1) +
guides (fill = guide_legend (title = "Probability of Occupancy")) +
annotation_scale(location = "bl", width_hint = 0.5,
pad_y = unit(0.03, "in")) +
annotation_north_arrow(location = "bl", which_north = "true",
pad_x = unit(0, "in"), pad_y = unit(0.1, "in"),
style = north_arrow_fancy_orienteering) +
labs (caption = "Mackenzie TSA boundary indicated by green dashed line.") +
theme (axis.text.x = element_text (angle = 30, hjust = 1))
ggplot (data = hex.grid) +
geom_sf (aes (fill = perc_occ_2080_bc)) +
geom_sf (data = tsa_bound, fill = NA, linetype = "longdash", size = 1.1, colour = "green") +
xlab("Longitude") + ylab("Latitude") +
ggtitle ("Base Case Fisher Equivalent Territory Occupancy 2080") +
scale_fill_viridis (option = "magma", breaks = c (0, 0.2, 0.4, 0.6, 0.8, 1),
direction = -1) +
guides (fill = guide_legend (title = "Probability of Occupancy")) +
annotation_scale(location = "bl", width_hint = 0.5,
pad_y = unit(0.03, "in")) +
annotation_north_arrow(location = "bl", which_north = "true",
pad_x = unit(0, "in"), pad_y = unit(0.1, "in"),
style = north_arrow_fancy_orienteering) +
labs (caption = "Mackenzie TSA boundary indicated by green dashed line.") +
theme (axis.text.x = element_text (angle = 30, hjust = 1))
ggplot (data = hex.grid) +
geom_sf (aes (fill = perc_occ_2022_bc)) + # cutblock2022_ha, wetland_ha
geom_sf (data = tsa_bound, fill = NA, linetype = "longdash", size = 1.1, colour = "green") +
xlab("Longitude") + ylab("Latitude") +
ggtitle ("Current Fisher Equivalent Territory Occupancy 2020") +
scale_fill_viridis (option = "magma", breaks = c (0, 0.2, 0.4, 0.6, 0.8, 1),
direction = -1) +
guides (fill = guide_legend (title = "Probability of Occupancy")) +
annotation_scale(location = "bl", width_hint = 0.5,
pad_y = unit(0.03, "in")) +
annotation_north_arrow(location = "bl", which_north = "true",
pad_x = unit (0, "in"), pad_y = unit (0.1, "in"),
style = north_arrow_fancy_orienteering) +
labs (caption = "Mackenzie TSA boundary indicated by green dashed line.") +
theme (axis.text.x = element_text (angle = 30, hjust = 1))
ggplot (data = hex.grid) +
geom_sf (aes (fill = perc_occ_2040_iaf)) +
geom_sf (data = tsa_bound, fill = NA, linetype = "longdash", size = 1.1, colour = "green") +
xlab("Longitude") + ylab("Latitude") +
ggtitle ("Indigenous Alternative Flow
Fisher Equivalent Territory Occupancy 2040") +
scale_fill_viridis (option = "magma", breaks = c (0, 0.2, 0.4, 0.6, 0.8, 1),
direction = -1) +
guides (fill = guide_legend (title = "Probability of Occupancy")) +
annotation_scale(location = "bl", width_hint = 0.5,
pad_y = unit(0.03, "in")) +
annotation_north_arrow(location = "bl", which_north = "true",
pad_x = unit(0, "in"), pad_y = unit(0.1, "in"),
style = north_arrow_fancy_orienteering) +
labs (caption = "Mackenzie TSA boundary indicated by green dashed line.") +
theme (axis.text.x = element_text (angle = 30, hjust = 1))
ggplot (data = hex.grid) +
geom_sf (aes (fill = perc_occ_2060_iaf)) +
geom_sf (data = tsa_bound, fill = NA, linetype = "longdash", size = 1.1, colour = "green") +
xlab("Longitude") + ylab("Latitude") +
ggtitle ("Indigenous Alternative Flow
Fisher Equivalent Territory Occupancy 2060") +
scale_fill_viridis (option = "magma", breaks = c (0, 0.2, 0.4, 0.6, 0.8, 1),
direction = -1) +
guides (fill = guide_legend (title = "Probability of Occupancy")) +
annotation_scale(location = "bl", width_hint = 0.5,
pad_y = unit(0.03, "in")) +
annotation_north_arrow(location = "bl", which_north = "true",
pad_x = unit(0, "in"), pad_y = unit(0.1, "in"),
style = north_arrow_fancy_orienteering) +
labs (caption = "Mackenzie TSA boundary indicated by green dashed line.") +
theme (axis.text.x = element_text (angle = 30, hjust = 1))
ggplot (data = hex.grid) +
geom_sf (aes (fill = perc_occ_2080_iaf)) +
geom_sf (data = tsa_bound, fill = NA, linetype = "longdash", size = 1.1, colour = "green") +
xlab("Longitude") + ylab("Latitude") +
ggtitle ("Indigenous Alternative Flow
Fisher Equivalent Territory Occupancy 2080") +
scale_fill_viridis (option = "magma", breaks = c (0, 0.2, 0.4, 0.6, 0.8, 1),
direction = -1) +
guides (fill = guide_legend (title = "Probability of Occupancy")) +
annotation_scale(location = "bl", width_hint = 0.5,
pad_y = unit(0.03, "in")) +
annotation_north_arrow(location = "bl", which_north = "true",
pad_x = unit(0, "in"), pad_y = unit(0.1, "in"),
style = north_arrow_fancy_orienteering) +
labs (caption = "Mackenzie TSA boundary indicated by green dashed line.") +
theme (axis.text.x = element_text (angle = 30, hjust = 1))
ggplot (data = sum.occ,
aes (x = Year, y = Total_Occupied, col = Scenario)) +
geom_line (aes (linetype = Scenario), size = 1) +
xlab ("Year") + ylab ("Total Probability of Occupancy of all FETAs") +
scale_x_continuous (limits = c (2020, 2090), breaks = seq (2020, 2090, by = 10)) +
scale_y_continuous (limits = c (750, 850), breaks = seq (750, 850, by = 10)) +
#ggtitle ("Base Case Central Group Caribou Critical Habitat Simulated Disturbance") +
theme (axis.text = element_text (size = 10),
axis.title = element_text (size = 12),
axis.line.x = element_line (size = 1),
axis.line.y = element_line (size = 1),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
legend.position = "bottom",
legend.key = element_rect (fill = NA))
820/780
View(sum.occ)
820/778
#base case
sum.occ <- data.frame (matrix (ncol = 3, nrow = 0))
colnames (sum.occ) <- c('Scenario', 'Year', 'Total_Occupied')
sum.occ [c(1:7, 15), 1] <- "Base Case"
sum.occ [c(8:14, 16), 1] <- "Indigenous Alternative Flow"
sum.occ [c(1:16), 2] <- c(2020, 2040, 2050, 2060, 2070, 2080, 2090,
2020, 2040, 2050, 2060, 2070, 2080, 2090,
2030, 2030)
View(sum.occ)
sum.occ [1,3] <- sum (hex.grid$perc_occ_2022_bc)
sum.occ [2,3] <- sum (hex.grid$perc_occ_2040_bc)
sum.occ [3,3] <- sum (hex.grid$perc_occ_2050_bc)
sum.occ [4,3] <- sum (hex.grid$perc_occ_2060_bc)
sum.occ [5,3] <- sum (hex.grid$perc_occ_2070_bc)
sum.occ [6,3] <- sum (hex.grid$perc_occ_2080_bc)
sum.occ [7,3] <- sum (hex.grid$perc_occ_2090_bc)
sum.occ [8,3] <- sum (hex.grid$perc_occ_2022_iaf)
sum.occ [9,3] <- sum (hex.grid$perc_occ_2040_iaf)
sum.occ [10,3] <- sum (hex.grid$perc_occ_2050_iaf)
sum.occ [11,3] <- sum (hex.grid$perc_occ_2060_iaf)
sum.occ [12,3] <- sum (hex.grid$perc_occ_2070_iaf)
sum.occ [13,3] <- sum (hex.grid$perc_occ_2080_iaf)
sum.occ [14,3] <- sum (hex.grid$perc_occ_2090_iaf)
sum.occ [15,3] <- sum (hex.grid$perc_occ_2030_bc)
sum.occ [16,3] <- sum (hex.grid$perc_occ_2030_iaf)
View(sum.occ)
#base case
sum.occ <- data.frame (matrix (ncol = 3, nrow = 0))
colnames (sum.occ) <- c('Scenario', 'Year', 'Total_Occupied')
sum.occ [c(1:7), 1] <- "Base Case"
sum.occ [c(8:14), 1] <- "Indigenous Alternative Flow"
sum.occ [c(1:14), 2] <- c(2020, 2040, 2050, 2060, 2070, 2080, 2090,
2020, 2040, 2050, 2060, 2070, 2080, 2090,
#2030, 2030
)
sum.occ [c(1:14), 2] <- c(2020, 2040, 2050, 2060, 2070, 2080, 2090,
2020, 2040, 2050, 2060, 2070, 2080, 2090
#2030, 2030
)
sum.occ [1,3] <- sum (hex.grid$perc_occ_2022_bc)
sum.occ [2,3] <- sum (hex.grid$perc_occ_2040_bc)
sum.occ [3,3] <- sum (hex.grid$perc_occ_2050_bc)
sum.occ [4,3] <- sum (hex.grid$perc_occ_2060_bc)
sum.occ [5,3] <- sum (hex.grid$perc_occ_2070_bc)
sum.occ [6,3] <- sum (hex.grid$perc_occ_2080_bc)
sum.occ [7,3] <- sum (hex.grid$perc_occ_2090_bc)
sum.occ [8,3] <- sum (hex.grid$perc_occ_2022_iaf)
sum.occ [9,3] <- sum (hex.grid$perc_occ_2040_iaf)
sum.occ [10,3] <- sum (hex.grid$perc_occ_2050_iaf)
sum.occ [11,3] <- sum (hex.grid$perc_occ_2060_iaf)
sum.occ [12,3] <- sum (hex.grid$perc_occ_2070_iaf)
sum.occ [13,3] <- sum (hex.grid$perc_occ_2080_iaf)
sum.occ [14,3] <- sum (hex.grid$perc_occ_2090_iaf)
View(sum.occ)
